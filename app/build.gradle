apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.google.firebase.crashlytics'

String APK_ID = "com.cheatdatabase"
String APK_NAME = "Cheat-Database"
int VERSION_CODE = 73
String VERSION_NAME = "2.7.1-preRelease"

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId APK_ID
        archivesBaseName = APK_NAME
        minSdkVersion 23
        targetSdkVersion 30
        versionCode VERSION_CODE
        versionName VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }

    dataBinding {
        enabled = true
    }

    viewBinding {
        enabled = true
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ext.alwaysUpdateBuildId = false

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    if (project.hasProperty('devBuild')) {
        splits.abi.enable = false
        splity.density.enable = false
        aaptOptions.cruncherEnabled = false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    // Specifies a flavor dimension.
    flavorDimensions "myDimension"

    productFlavors {
        googlePlayFlavor {
            dimension "myDimension"
            versionNameSuffix "-googlePlay"
        }
        amazonFlavor {
            dimension "myDimension"
            versionNameSuffix "-amazon"
        }
        huaweiFlavor {
            dimension "myDimension"
            versionNameSuffix "-huawei"
        }
//        development {
//            resConfigs("en", "de")
//            dimension "myDimension"
//            versionNameSuffix "-dev"
//        }
    }

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

repositories {
    maven { url "https://dl.bintray.com/drummer-aidan/maven/" }
    maven { url 'https://s3.amazonaws.com/moat-sdk-builds' }
    maven { url 'https://maven.google.com' }
    maven { url 'https://jitpack.io' }
    jcenter()
    mavenCentral()
}

ext {
    supportVersion = '28.0.0'
}

dependencies {
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    api 'androidx.exifinterface:exifinterface:1.3.1'
    api 'com.google.firebase:firebase-core:18.0.0'
    api 'com.google.firebase:firebase-messaging:21.0.0'
    api 'com.google.firebase:firebase-config:20.0.1'
    api 'com.google.firebase:firebase-appindexing:19.1.0'
    implementation 'com.google.firebase:firebase-inappmessaging-display:19.1.2'
    implementation 'com.google.firebase:firebase-analytics:18.0.0'
    api 'androidx.appcompat:appcompat:1.2.0'
    api 'com.google.android.material:material:1.2.1'
    api 'androidx.recyclerview:recyclerview:1.1.0'
    api 'androidx.preference:preference-ktx:1.1.1'

    // Butterknife
    implementation 'com.jakewharton:butterknife:10.2.3'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'
    kapt 'com.jakewharton:butterknife-compiler:10.2.3'

    implementation 'com.github.vajro:MaterialDesignLibrary:1.6'
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    api 'com.google.android.gms:play-services-analytics:17.0.0'
    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation 'com.github.SherlockGougou:MagicIndicator:1.6.0'
    implementation 'com.simplecityapps:recyclerview-fastscroll:2.0.1'

    implementation 'com.facebook.android:audience-network-sdk:6.2.0'
    implementation 'com.zsoltsafrany:needle:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.github.stfalcon:stfalcon-imageviewer:0.1.0'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    //Logging Network Calls
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'

    implementation 'com.google.android.gms:play-services-basement:17.5.0'
    implementation 'com.google.android.gms:play-services-ads-identifier:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.1.0'

    // KOTLIN
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_version"

    // KODEIN
    implementation "org.kodein.di:kodein-di-generic-jvm:$kodein_version"
    implementation "org.kodein.di:kodein-di-framework-android-x:$kodein_version"

    // ROOM
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Navigation component
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-runtime-ktx:$nav_version"

    implementation("androidx.work:work-runtime-ktx:$work_version") {
        // Exclude com.google.guava to avoid 'Duplicate ListenableFuture found' error
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }

    // GROUPIE (easy recyclerviews)
    implementation "com.xwray:groupie:$groupie_version"
    implementation "com.xwray:groupie-kotlin-android-extensions:$groupie_version"

    // HILT
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_lifecycle_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_lifecycle_version"
    annotationProcessor "androidx.hilt:hilt-compiler:$hilt_lifecycle_version"

    // TESTING
    testImplementation 'junit:junit:4.13.1'
    androidTestUtil 'androidx.test:orchestrator:1.3.0'

    testImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation "androidx.test:runner:1.3.0"
    androidTestImplementation "androidx.test:rules:1.3.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"

    // Mockito
    androidTestImplementation 'org.mockito:mockito-android:3.6.0'
    testImplementation 'org.powermock:powermock-api-mockito:1.7.4'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.9'

    // Espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.3.0"

    testImplementation 'org.hamcrest:hamcrest-core:2.2'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:25.12.0')

    // Declare the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'


    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // Jetpack Compose Integration
    implementation 'androidx.navigation:navigation-compose:1.0.0-alpha02'
}

kapt {
    correctErrorTypes true
}